# Nama workflow yang akan muncul di tab Actions GitHub
name: Generate ConnectSphere ZK Proof

on:
  workflow_dispatch:
    inputs:
      secret_a:
        description: 'Your first secret number (e.g., 12345)'
        required: true
        type: string
      secret_b:
        description: 'Your second secret number (e.g., 67890)'
        required: true
        type: string

jobs:
  generate-proof:
    runs-on: ubuntu-latest
    steps:
      # Langkah 1: Checkout kode repositori Anda
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Langkah 2: Siapkan environment Rust dan tambahkan bin ke PATH
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # --- PERBAIKAN: Proses instalasi dipecah menjadi beberapa langkah ---

      # Langkah 3: Install SP1 CLI (termasuk sp1up dan cargo-prove)
      - name: Install SP1 CLI Tools
        run: |
          echo "Cloning SP1 repository and installing CLI..."
          git clone https://github.com/succinctlabs/sp1.git ~/sp1
          cd ~/sp1/crates/cli
          cargo install --path .
          
      # Langkah 4: Download dan Link SP1 Toolchain
      # Karena ini adalah langkah BARU, PATH dari Langkah 2 dijamin sudah diperbarui
      - name: Download and Link SP1 Toolchain
        run: |
          echo "Verifying CLI tools are in PATH..."
          sp1up --version
          cargo prove --version

          echo "Downloading toolchain via sp1up..."
          sp1up

          echo "Manually linking toolchain..."
          mkdir -p ~/.sp1/toolchains/succinct
          tar -xvf ~/.sp1/rust-toolchain-x86_64-unknown-linux-gnu.tar.gz -C ~/.sp1/toolchains/succinct --strip-components=1
          rustup toolchain link succinct ~/.sp1/toolchains/succinct
          
          echo "Toolchain linked successfully."
          cd $GITHUB_WORKSPACE

      # Langkah 5: Hitung nilai 'n' dari input rahasia pengguna
      - name: Calculate N
        id: calculate_n
        run: |
          a=${{ inputs.secret_a }}
          b=${{ inputs.secret_b }}
          n=$((a * b))
          echo "n_value=$n" >> $GITHUB_OUTPUT

      # Langkah 6: Jalankan Prover Script dengan input dari pengguna
      - name: Run ZK Prover
        run: |
          echo "Starting ZK proof generation for n=${{ steps.calculate_n.outputs.n_value }}..."
          cargo run --release -p proof-of-secret-script -- --n ${{ steps.calculate_n.outputs.n_value }} --a ${{ inputs.secret_a }} --b ${{ inputs.secret_b }}
        timeout-minutes: 30

      # Langkah 7: Jalankan Converter Script untuk mendapatkan output final
      - name: Convert Proof to Sui Arguments
        run: |
          echo "Converting proof and printing arguments..."
          cargo run --release -p proof-converter-script
